[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py37']

[tool.pylint.main]
init-hook = 'import sys; sys.path.append("./src")'
ignore-paths = ["src/bin"]
load-plugins = ["pylint.extensions.bad_builtin", "pylint.extensions.mccabe"]
extension-pkg-allow-list = ["yara"]
jobs = 0
include-naming-hint = true
good-names = ["i", "j", "k", "Run", "_", "db", "ex", "fd", "fo", "fp", "fw", "pw", "rv", "sc", "tc"]

[tool.pylint."messages control"]
confidence = []
disable = ["missing-docstring" , "locally-disabled", "logging-format-interpolation", "logging-fstring-interpolation"]


[tool.pylint.reports]
output-format = "colorized"
msg-template="{path}:{line}: [{symbol}:{obj}] {msg}"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.design]
max-args=7
max-complexity = 7
min-public-methods = 0
max-public-methods = 40

[tool.pylint.imports]
known-third-party = ["enchant", "docker"]

[tool.isort]
line_length=120
default_section = "THIRDPARTY"
known_first_party = ["analysis", "compare", "helperFunctions", "install", "intercom", "objects", "plugins", "scheduler",
    "statistic", "storage", "test", "unpacker", "version", "web_interface"]
known_third_party = "docker"
profile = "black"

[tool.pytest.ini_options]
addopts = "-v"
testpaths = [
    "src/test",
    "src/plugins/**/test",
]
markers = [
    "AnalysisPluginClass: Set the Class of the analysis_plugin fixture",
    "plugin_init_kwargs: Keyword arguments to pass to AnalysisPluginClass",
    "plugin_start_worker: Whether or not to start actual workers",
    "cfg_defaults: Overwrite defaults for the testing config",
    "WebInterfaceUnitTestConfig: Configure the web_interface fixture",
]
